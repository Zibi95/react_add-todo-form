{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","completed","id","title","TodoList","todos","map","username","userId","getUser","usersFromServer","find","getNewId","reduce","acc","curr","Math","max","App","useState","setTitle","titleError","setTitleError","selectedUser","setSelectedUser","userError","setUserError","todosFromServer","setTodos","handleChange","e","target","value","test","action","method","onSubmit","preventDefault","newTodo","prevTodos","htmlFor","type","placeholder","onChange","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7201cb08.chunk.js","sourcesContent":["export type User = {\n  id: number,\n  name: string,\n  email: string,\n};\n\ntype UserProps = {\n  user: User,\n};\n\nexport const UserInfo = ({ user }: UserProps) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import { UserInfo, User } from '../UserInfo';\n\nexport type Todo = {\n  id: number,\n  userId: number,\n  title: string,\n  completed: boolean,\n  user: User | null,\n};\n\ntype TodoProps = {\n  todo: Todo,\n};\n\nexport const TodoInfo = ({ todo }: TodoProps) => (\n  <article\n    className={\n      todo.completed\n        ? 'TodoInfo TodoInfo--completed'\n        : 'TodoInfo'\n    }\n    data-id={todo.id}\n  >\n    <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n    {todo.user && <UserInfo user={todo.user} />}\n  </article>\n);\n","import { TodoInfo, Todo } from '../TodoInfo';\n\ntype TodoListProps = {\n  todos: Todo[];\n};\n\nexport const TodoList = ({ todos }: TodoListProps) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => <TodoInfo todo={todo} key={todo.id} />)}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { FormEventHandler, useState, ChangeEvent } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { Todo } from './components/TodoInfo';\nimport { User } from './components/UserInfo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find((user) => user.id === userId);\n\n  return foundUser || null;\n}\n\nfunction getNewId(todos: Todo[]) {\n  return (\n    todos.reduce((acc, curr) => {\n      return Math.max(acc, curr.id);\n    }, 0) + 1\n  );\n}\n\nfunction getTodos() {\n  return todosFromServer.map((todo) => ({\n    ...todo,\n    user: getUser(todo.userId),\n  }));\n}\n\nconst validateInput = (string: string) => {\n  const regex = /^[a-zA-Zа-яА-ЯёЁ\\d\\s]*$/;\n\n  if (!regex.test(string)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [userError, setUserError] = useState(false);\n  const [todos, setTodos] = useState(getTodos());\n\n  const lookForError = () => {\n    if (!title && !selectedUser) {\n      setTitleError(true);\n      setUserError(true);\n    } else if (!selectedUser) {\n      setUserError(true);\n    } else if (!title) {\n      setTitleError(true);\n    }\n  };\n\n  const handleSubmit: FormEventHandler = (e) => {\n    e.preventDefault();\n    if (!title || !selectedUser) {\n      lookForError();\n\n      return;\n    }\n\n    const newTodo = {\n      id: getNewId(todos),\n      title,\n      completed: false,\n      userId: selectedUser,\n      user: getUser(selectedUser),\n    };\n\n    setTodos((prevTodos) => {\n      return [...prevTodos, newTodo];\n    });\n\n    setSelectedUser(0);\n    setTitle('');\n  };\n\n  const handleChange = (\n    e: ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    const { name, value } = e.target;\n\n    if (name === 'title') {\n      if (validateInput(value)) {\n        setTitle(value);\n        setTitleError(false);\n      }\n    } else {\n      setSelectedUser(+value);\n      setUserError(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title:</label>\n          {' '}\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Title\"\n            value={title}\n            id=\"title\"\n            name=\"title\"\n            onChange={(e) => handleChange(e)}\n          />\n          {' '}\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User:</label>\n          {' '}\n          <select\n            data-cy=\"userSelect\"\n            id=\"user\"\n            name=\"user\"\n            value={selectedUser}\n            onChange={(e) => handleChange(e)}\n          >\n            <option value=\"0\" disabled>\n              Choose a user\n            </option>\n            {usersFromServer.map((user) => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {' '}\n          {userError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}